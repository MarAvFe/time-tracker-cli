{"version":3,"sources":["../src/index.js"],"names":["config","name","tasks","pkg","notify","manager","EXEC","version","description","option","command","alias","action","key","Array","isArray","join","startTask","pauseTask","unpauseTask","stopTask","text","addDescription","stringTime","modifyTask","sumarize","search","rate","setInterval","getTime","process","stdout","write","moveCursor","console","log","JSON","stringify","getTasksJson","string","delete","value","configure","getConfig","parse","argv","updateDB","update","outputHelp","exit"],"mappings":"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","file":"index.js","sourcesContent":["import 'babel-polyfill'\n\nimport program from 'commander'\nimport updateNotifier from 'update-notifier'\nimport Configstore from 'configstore'\nimport pkg from '../package.json'\n\nimport Manager from './core/Manager'\nimport { humanParseDiff } from './core/utils'\nimport { outputVertical, cliError, outputConfig } from './core/output'\n\nimport autocomplete from './autocomplete'\n\nconst config = new Configstore(pkg.name, {\n    tasks:{},\n    config:{\n        'format.output': 'DD/MM'\n    }\n})\n\nupdateNotifier({ pkg }).notify()\n\nconst manager = new Manager(config)\nautocomplete()\n\n//Exec\nlet EXEC = false\n\nprogram\n    .version(pkg.version)\n    .description('Tiny time tracker for projects')\n    .option('--updateDB', 'Bool to update the db')\n\nprogram\n    .command('start <task_key> [description]')\n    .description('Start task with a description.')\n    .alias('s')\n    .action(function(key, description) {\n        description = (description) ? Array.isArray(description) ? description.join(' ') : description : null\n        manager.startTask(key, description)\n        EXEC = true\n    })\n\nprogram\n    .command('pause <task_key>')\n    .description('Pause task')\n    .alias('p')\n    .action(function(key) {\n        manager.pauseTask(key)\n        EXEC = true\n    })\n\nprogram\n    .command('unpause <task_key>')\n    .description('Unpause task')\n    .alias('up')\n    .action(function(key) {\n        manager.unpauseTask(key)\n        EXEC = true\n    })\n\n\nprogram\n    .command('finish <task_key> [description]')\n    .description('Stop task, you can add a description')\n    .alias('f')\n    .action(function(key, description) {\n        description = (description) ? Array.isArray(description) ? description.join(' ') : description : null\n        manager.stopTask(key, description)\n        EXEC = true\n    })\n\nprogram\n    .command('description <task_key> <descriptionText...>')\n    .description('Add description to your task.')\n    .alias('d')\n    .action(function(key, text) {\n        text = Array.isArray(text) ? text.join(' ') : text\n        manager.addDescription(key, text)\n        EXEC = true\n    })\n\nprogram\n    .command('add <task_key> <stringTime>')\n    .description('Adds time to a task. Example: \"1h2m3s\"')\n    .action(function(key, stringTime) {\n        manager.modifyTask('add', key, stringTime)\n        manager.sumarize(key, manager.search(key), false)\n        EXEC = true\n    })\n\nprogram\n    .command('subtract <task_key> <stringTime>')\n    .description('Subtract time to a task. Example: \"1h2m3s\"')\n    .alias('sub')\n    .action(function(key, stringTime) {\n        manager.modifyTask('subtract', key, stringTime)\n        manager.sumarize(key, manager.search(key), false)\n        EXEC = true\n    })\n\nprogram\n    .command('report [task_string] [rate]')\n    .description('Report time of the tasks, empty for select all tasks. Can pass a rate (1h).')\n    .alias('r')\n    .action(function(tasks, rate) {\n        tasks = (tasks) ? tasks : 'all'\n        manager.sumarize(tasks, rate)\n        EXEC = true\n    })\n\nprogram\n    .command('log <task_key>')\n    .description('Logs the time of the  task')\n    .alias('l')\n    .action(function(key) {\n        setInterval(() => {\n            let text = outputVertical('Task:', key, humanParseDiff(manager.getTime(key)))\n            process.stdout.write(text)\n            process.stdout.moveCursor(0,-2)\n        }, 1000)\n        EXEC = true\n    })\n\nprogram\n    .command('export')\n    .description('Export the tasks in a JSON')\n    .alias('e')\n    .action(function(key) {\n        console.log(JSON.stringify(manager.getTasksJson(), null, 4))\n        EXEC = true\n    })\n\nprogram\n    .command('delete [task_string]')\n    .description('Remove tasks from the list. Empty for select all tasks')\n    .alias('del')\n    .action(function(string) {\n        string = (string) ? string : 'all'\n        manager.delete(string)\n        EXEC = true\n    })\n\nprogram\n    .command('configure <key> <value>')\n    .description('Configure the value of the config passing a key')\n    .action(function(key, value) {\n        manager.configure(key, value)\n        EXEC = true\n    })\n\nprogram\n    .command('configuration')\n    .description('Output configuration')\n    .action(function(string) {\n        outputConfig(manager.getConfig())\n        EXEC = true\n    })\n\nprogram\n    .parse(process.argv)\n\n\nif (program.updateDB) {\n    manager.update()\n    EXEC = true\n}\n\nif (!EXEC) {\n    cliError('You must use a valid command.')\n    program.outputHelp()\n    process.exit(1)\n}\n"]}