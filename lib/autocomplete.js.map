{"version":3,"sources":["../src/autocomplete.js"],"names":["autocomplete","config","tasks","Object","keys","all","key","before","keyTasks","indexOf","complete","init","process","argv","setupShellInitFile"],"mappings":";;;;;;;;AAAA;;;;AACA;;;;;;AAEA,IAAMA,eAAe,SAAfA,YAAe,CAASC,MAAT,EAAgB;AACjC,QAAMC,QAAQC,OAAOC,IAAP,CAAYH,OAAOI,GAAP,CAAWH,KAAvB,CAAd;;AAEA,QAAII,MAAM,SAANA,GAAM,OAAc;AAAA,YAAZC,MAAY,QAAZA,MAAY;;AACpB,YAAIC,WAAW,CAAC,OAAD,EAAU,OAAV,EAAmB,SAAnB,EAA8B,QAA9B,EAAwC,KAAxC,EAA+C,aAA/C,EAA8D,KAA9D,EAAqE,QAArE,CAAf;;AAEA,YAAIA,SAASC,OAAT,CAAiBF,MAAjB,IAA2B,CAAC,CAAhC,EAAkC;AAC9B,mBAAOL,KAAP;AACH;;AAED,YAAIK,WAAW,WAAf,EAA4B;AACxB;AACH;AACJ,KAVD;;AAYA,QAAMG,oDAEA,CAAC,OAAD,EAAU,OAAV,EAAmB,SAAnB,EAA8B,QAA9B,EAAwC,aAAxC,EAAuD,KAAvD,EAA8D,UAA9D,EAA0E,QAA1E,EAAoF,KAApF,EAA2F,QAA3F,EAAqG,QAArG,EAA+G,eAA/G,EAAgI,WAAhI,CAFA,EAGAJ,GAHA,CAAN;AAKAI,aAASC,IAAT;;AAEA,QAAI,CAACC,QAAQC,IAAR,CAAaJ,OAAb,CAAqB,YAArB,CAAL,EAAyC;AACrCC,iBAASI,kBAAT;AACH;AAEJ,CA1BD;;kBA4Bed,Y","file":"autocomplete.js","sourcesContent":["import omelette from 'omelette'\nimport { configElements } from './core/constants'\n\nconst autocomplete = function(config){\n    const tasks = Object.keys(config.all.tasks)\n\n    let key = ({before}) => {\n        let keyTasks = ['start', 'pause', 'unpause', 'finish', 'log', 'description', 'add', 'remove']\n\n        if (keyTasks.indexOf(before) > -1){\n            return tasks\n        }\n\n        if (before === 'configure' ){\n            return configElements\n        }\n    }\n\n    const complete = omelette`\n        timer\n        ${[\"start\", \"pause\", \"unpause\", \"finish\", \"description\", \"add\", \"subtract\", \"report\", \"log\", \"export\", \"delete\", \"configuration\", \"configure\"]}\n        ${key}\n    `\n    complete.init()\n\n    if (~process.argv.indexOf('--setupCLI')) {\n        complete.setupShellInitFile()\n    }\n\n}\n\nexport default autocomplete\n"]}