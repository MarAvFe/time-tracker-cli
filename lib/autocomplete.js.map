{"version":3,"sources":["../src/autocomplete.js"],"names":["config","name","tasks","autocomplete","key","reply","before","keyTasks","indexOf","Object","keys","all","complete","init","process","argv","setupShellInitFile"],"mappings":";;;;;;;;AAAA;;;;AACA;;AAEA;;;;AACA;;;;;;;;AAEA,IAAMA,SAAS,0BAAgB,kBAAIC,IAApB,EAA0B;AACrCC,WAAM,EAD+B;AAErCF,YAAO;AACH,yBAAiB;AADd;AAF8B,CAA1B,CAAf;;AAOA,IAAMG,eAAe,SAAfA,YAAe,GAAU;AAC3B,QAAIC,MAAM,SAANA,GAAM,OAAqB;AAAA,YAAnBC,KAAmB,QAAnBA,KAAmB;AAAA,YAAZC,MAAY,QAAZA,MAAY;;AAC3B,YAAIC,WAAW,CAAC,OAAD,EAAU,OAAV,EAAmB,SAAnB,EAA8B,QAA9B,EAAwC,KAAxC,EAA+C,aAA/C,EAA8D,KAA9D,EAAqE,QAArE,CAAf;;AAEA,YAAIA,SAASC,OAAT,CAAiBF,MAAjB,IAA2B,CAAC,CAAhC,EAAkC;AAC9BD,kBAAMI,OAAOC,IAAP,CAAYV,OAAOW,GAAP,CAAWT,KAAvB,CAAN;AACH;;AAED,YAAII,WAAW,WAAf,EAA4B;AACxBD;AACH;AACJ,KAVD;;AAYA,QAAMO,oDAEA,CAAC,OAAD,EAAU,OAAV,EAAmB,SAAnB,EAA8B,QAA9B,EAAwC,aAAxC,EAAuD,KAAvD,EAA8D,UAA9D,EAA0E,QAA1E,EAAoF,KAApF,EAA2F,QAA3F,EAAqG,QAArG,EAA+G,eAA/G,EAAgI,WAAhI,CAFA,EAGAR,GAHA,CAAN;AAKAQ,aAASC,IAAT;;AAEA,QAAI,CAACC,QAAQC,IAAR,CAAaP,OAAb,CAAqB,YAArB,CAAL,EAAyC;AACrCI,iBAASI,kBAAT;AACH;AAEJ,CAxBD;;kBA0Beb,Y","file":"autocomplete.js","sourcesContent":["import omelette from 'omelette'\nimport { configElements } from './core/constants'\n\nimport pkg from '../package.json'\nimport Configstore from 'configstore'\n\nconst config = new Configstore(pkg.name, {\n    tasks:{},\n    config:{\n        'format.output': 'DD/MM'\n    }\n})\n\nconst autocomplete = function(){\n    let key = ({reply, before}) => {\n        let keyTasks = ['start', 'pause', 'unpause', 'finish', 'log', 'description', 'add', 'remove']\n\n        if (keyTasks.indexOf(before) > -1){\n            reply(Object.keys(config.all.tasks))\n        }\n\n        if (before === 'configure' ){\n            reply(configElements)\n        }\n    }\n\n    const complete = omelette`\n        timer\n        ${[\"start\", \"pause\", \"unpause\", \"finish\", \"description\", \"add\", \"subtract\", \"report\", \"log\", \"export\", \"delete\", \"configuration\", \"configure\"]}\n        ${key}\n    `\n    complete.init()\n\n    if (~process.argv.indexOf('--setupCLI')) {\n        complete.setupShellInitFile()\n    }\n\n}\n\nexport default autocomplete\n"]}