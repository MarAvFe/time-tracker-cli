{"version":3,"sources":["../src/autocomplete.js"],"names":["autocomplete","config","taskKeys","Object","keys","all","tasks","complete","on","reply","before","keyTasks","indexOf","init","process","argv","setupShellInitFile"],"mappings":";;;;;;AAAA;;;;AACA;;;;AAEA,IAAMA,eAAe,SAAfA,YAAe,CAASC,MAAT,EAAgB;AACjC,QAAIC,WAAWC,OAAOC,IAAP,CAAYH,OAAOI,GAAP,CAAWC,KAAvB,CAAf;;AAEA,QAAMC,WAAW,wBAAS,wBAAT,CAAjB;;AAEAA,aAASC,EAAT,CAAY,QAAZ,EAAqB,gBAAe;AAAA,YAAZC,KAAY,QAAZA,KAAY;;AAChCA,cAAM,CAAC,OAAD,EAAU,OAAV,EAAmB,SAAnB,EAA8B,QAA9B,EAAwC,aAAxC,EAAuD,KAAvD,EAA8D,UAA9D,EAA0E,QAA1E,EAAoF,KAApF,EAA2F,QAA3F,EAAqG,QAArG,EAA+G,eAA/G,EAAgI,WAAhI,CAAN;AACH,KAFD;;AAIAF,aAASC,EAAT,CAAY,OAAZ,EAAqB,iBAAsB;AAAA,YAAnBC,KAAmB,SAAnBA,KAAmB;AAAA,YAAZC,MAAY,SAAZA,MAAY;;AACvC,YAAIC,WAAW,CAAC,OAAD,EAAU,OAAV,EAAmB,SAAnB,EAA8B,QAA9B,EAAwC,KAAxC,EAA+C,aAA/C,EAA8D,KAA9D,EAAqE,QAArE,CAAf;;AAEA,YAAIA,SAASC,OAAT,CAAiBF,MAAjB,IAA2B,CAAC,CAAhC,EAAkC;AAC9BD,kBAAMP,QAAN;AACH,SAFD,MAEO,IAAIQ,WAAW,WAAf,EAA4B;AAC/BD;AACH;AACJ,KARD;;AAUAF,aAASM,IAAT;;AAEA,QAAI,CAACC,QAAQC,IAAR,CAAaH,OAAb,CAAqB,YAArB,CAAL,EAAyC;AACrCL,iBAASS,kBAAT;AACH;AACJ,CAxBD;;kBA0BehB,Y","file":"autocomplete.js","sourcesContent":["import omelette from 'omelette'\nimport { configElements } from './core/constants'\n\nconst autocomplete = function(config){\n    let taskKeys = Object.keys(config.all.tasks)\n\n    const complete = omelette('timer <action> <tasks>')\n\n    complete.on(\"action\",({ reply }) => {\n        reply([\"start\", \"pause\", \"unpause\", \"finish\", \"description\", \"add\", \"subtract\", \"report\", \"log\", \"export\", \"delete\", \"configuration\", \"configure\"]);\n    });\n\n    complete.on(\"tasks\", ({ reply, before }) =>{\n        let keyTasks = ['start', 'pause', 'unpause', 'finish', 'log', 'description', 'add', 'remove']\n\n        if (keyTasks.indexOf(before) > -1){\n            reply(taskKeys)\n        } else if (before === 'configure' ){\n            reply(configElements)\n        }\n    })\n\n    complete.init()\n\n    if (~process.argv.indexOf('--setupCLI')) {\n        complete.setupShellInitFile()\n    }\n}\n\nexport default autocomplete\n"]}